@{
    ViewData["Title"] = Model.IsEdit ? "Edit User" : "Create User";
}

@model INTEX.Models.CreateUserViewModel

<h2>@(Model.IsEdit ? "Edit User" : "Create User")</h2>

<!-- Set asp-action based on IsEdit property -->
<form asp-action="@(Model.IsEdit ? "Edit" : "Create")">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="UserName" class="control-label">Username</label>
        <input asp-for="UserName" class="form-control" />
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="control-label">Email</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Role" class="control-label">Role</label>
        <select asp-for="Role" class="form-control">
            @if (Model != null && Model.Roles != null)
            {
                foreach (var role in Model.Roles)
                {
                    <option value="@role.Name">@role.Name</option>
                }
            }
        </select>
        <span asp-validation-for="Role" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="@(Model.IsEdit ? "Save" : "Create")" class="btn btn-primary" />
    </div>
</form>
